{"version":3,"sources":["reportWebVitals.ts","store/app-reducer/app-selector.tsx","pages/PageTwo/PageTwo.tsx","store/tender/tender-reducer.ts","utils/HelperFunctions.ts","store/tender/tender-selector.tsx","components/TradingTermsForm/TradingTermsForm.tsx","components/ExpensesForm/ExpensesForm.tsx","components/ResultTable/ResultTable.tsx","components/InputFormBetonTable/InputFormBetonTable.tsx","components/InputTableBetonRow/InputTableBetonRow.tsx","components/InputTableBeton/InputTableBeton.tsx","pages/PageOne/PageOne.tsx","routes/Routes.tsx","store/app-reducer/app-reducer.ts","components/ErrorSnackBar/ErrorSnackBar.tsx","assets/images/Infinity-1s-200px.svg","components/Preloder/Preloader.tsx","components/Navbar/Navbar.tsx","app/App.tsx","store/store.ts","index.tsx","components/TradingTermsForm/TradingTermsForm.module.css","components/ErrorSnackBar/ErrorSnackBar.module.css","components/Navbar/Navbar.module.css","components/ExpensesForm/ExpensesForm.module.css","pages/PageTwo/PageTwo.module.css","pages/PageOne/PageOne.module.css","components/InputTableBetonRow/InputTableBetonRow.module.css","components/Preloder/Preloader.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectorStatus","state","app","status","selectorError","error","PageTwo","className","style","xxx","initialState","tableBetons","article","car","id","grade","mobility","prize","numberOf","tradingProperty","downTime","downTimePrice","allTransportPrice","minimumLoad","expenses","transportPrice","discount","round","value","decimals","Number","Math","selectorTableBetons","tender","selectorTradingProperties","selectorTransportPrice","selectorDiscount","selectorTotalBetonNumber","createSelector","reduce","res","b","selectorOneTransportPrice","TradingProperties","TotalBetonNumber","selectorCalculateTableBetons","OneTransportPrice","map","name","transportPrize","discountPrize","totalOnePrize","totalAllPrize","totalAllPrizNDS","totalNDS","NDS","prizeNDS","TradingTermsForm","dispatch","useDispatch","useState","isActiveTenderForm","setIsActiveTenderForm","useSelector","formik","useFormik","enableReinitialize","initialValues","onSubmit","values","TradingProperty","type","properties","resetForm","handleSubmit","s","tradingTermsFormBlock","formLine","customInput","TextField","variant","onChange","handleChange","placeholder","disabled","saveButton","Button","color","onClick","ExpensesForm","expensesFormBlock","e","setTransportPrice","target","setDiscount","useStyles","makeStyles","table","minWidth","ResultTable","classes","betons","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","beton","index","concreteMobility","carArr","InputFormBetonTable","changeType","setIsChangeBeton","rememberMe","validate","errors","v1","setTableBeton","ChangeTableBeton","onBlur","handleBlur","FormControl","size","Select","label","m","MenuItem","margin","touched","labelId","InputTableBetonRow","isChangeBeton","change","IconButton","removeTableBeton","Delete","InputTableBeton","theme","createMuiTheme","overrides","MuiOutlinedInput","inputMarginDense","padding","paddingTop","paddingBottom","input","height","MuiTextField","root","width","MuiSelect","display","alignItems","selectMenu","MuiIconButton","MuiTableRow","MuiTableCell","textAlign","border","borderTopColor","borderBottomColor","PageOne","ThemeProvider","tradingFormBlock","PATH","Routes","path","exact","render","to","ErrorSnackBar","props","notification","text","errorMessage","close","Preloader","pre","src","preloader","Navbar","AppBar","position","appBarBlock","Toolbar","nav","NavLink","App","rootReducer","combineReducers","action","filter","bet","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.05724423.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AppRootStateType} from \"../store\";\nimport {RequestStatusType} from \"./app-reducer\";\n\n\nexport const selectorStatus = (state: AppRootStateType): RequestStatusType => state.app.status\nexport const selectorError = (state: AppRootStateType): string | null => state.app.error\n","import React from 'react'\nimport style from \"./PageTwo.module.css\";\n\nexport const PageTwo = () => {\n\n\n    return (\n        <div className={style.xxx}>\n            2222222222222\n        </div>\n    )\n}","const initialState = {\n    tableBetons: [ {\n        article: \"any\",\n        car: 'Миксер',\n        id: \"string\",\n        grade: \"sssss\",\n        mobility: \"П3\",\n        prize: 1111,\n        numberOf: 2222,\n    }] as TableBetonType[],                  // бетоны для тендера\n    tradingProperty: {                   // условия тендераЖ\n        downTime: 0.75,                 // включенное время простоя, ч\n        downTimePrice: 50,              // стоимость сверх нормативного времени простоя, руб/час\n        allTransportPrice: 0,           //  сумма выделяемая на транспорт, руб\n        minimumLoad: 6,                 // минимальная загрузка, м3\n    },\n    expenses: {                          // затраты:\n        transportPrice: 1.15,            // возмещение транспорта м/ч за один рейс\n        discount: 0,                       // скидка\n    },\n};\n\nexport const tenderReducer = (state: tableBetonInitialStateType = initialState, action: ActionsType): tableBetonInitialStateType => {\n    switch (action.type) {\n\n        case 'TABLE_BETON/SET_BETON':\n            return { ...state, tableBetons: [...state.tableBetons ? state.tableBetons : [], action.beton] };\n\n        case 'TABLE_BETON/REMOVE_BETON':\n            return {\n                ...state,\n                tableBetons: state.tableBetons ? state.tableBetons.filter(bet => bet.id !== action.id) : null,\n            };\n\n        case 'TABLE_BETON/CHANGE_TRADING_PROPERTIES':\n            return {\n                ...state,\n                tradingProperty: action.properties,\n            };\n\n        case 'TABLE_BETON/CHANGE_TRANSPORT_PRICE':\n            return {\n                ...state,\n                expenses: { ...state.expenses, transportPrice: action.transportPrice },\n            };\n\n        case 'TABLE_BETON/CHANGE_DISCOUNT':\n            return {\n                ...state,\n                expenses: { ...state.expenses, discount: action.discount },\n            };\n        case 'TABLE_BETON/CHANGE_BETON':\n            return {\n                ...state,\n                tableBetons: state.tableBetons ? state.tableBetons.map(bet => {debugger\n                   if( bet.id === action.beton.id){  debugger\n                       return action.beton\n                   }else {debugger\n                       return bet }\n                }) : null,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setTableBeton = (beton: TableBetonType) =>\n    ({ type: 'TABLE_BETON/SET_BETON', beton } as const);\nexport const removeTableBeton = (id: string) =>\n    ({ type: 'TABLE_BETON/REMOVE_BETON', id } as const);\nexport const setTradingProperty = (properties: TradingPropertyType) =>\n    ({ type: 'TABLE_BETON/CHANGE_TRADING_PROPERTIES', properties } as const);\nexport const setTransportPrice = (transportPrice: number) =>\n    ({ type: 'TABLE_BETON/CHANGE_TRANSPORT_PRICE', transportPrice } as const);\nexport const setDiscount = (discount: number) =>\n    ({ type: 'TABLE_BETON/CHANGE_DISCOUNT', discount } as const);\nexport const ChangeTableBeton = (beton: TableBetonType) =>\n    ({ type: 'TABLE_BETON/CHANGE_BETON', beton } as const);\n\n\nexport type TableBetonType =\n    {\n        article: any,\n        car: 'Миксер' | 'Самосвал'\n        id: string,\n        grade: string,\n        mobility: string,\n        prize: number,\n        numberOf: number,\n    }\nexport type TradingPropertyType =\n    {\n        downTime: number,\n        downTimePrice: number,\n        allTransportPrice: number,\n        minimumLoad: number,\n    }\n\n\nexport type tableBetonInitialStateType = {\n    tableBetons: TableBetonType[] | null\n    tradingProperty: TradingPropertyType\n    expenses: {\n        transportPrice: number,\n        discount: number\n    },\n}\n\ntype ActionsType =\n    ReturnType<typeof setTableBeton> |\n    ReturnType<typeof removeTableBeton> |\n    ReturnType<typeof setTradingProperty> |\n    ReturnType<typeof setTransportPrice> |\n    ReturnType<typeof setDiscount>|\n    ReturnType<typeof ChangeTableBeton>\n\n\n\n\n\n\n\n","// function for rounding fractional numbers(value)(decimals-number of decimal places)\nexport const round=(value:number, decimals:number)=> {\n    // @ts-ignore\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n}","import { AppRootStateType } from '../store';\nimport { TableBetonType, TradingPropertyType } from './tender-reducer';\nimport { createSelector } from 'reselect';\nimport { round } from '../../utils/HelperFunctions';\n\nexport const selectorTableBetons = (state: AppRootStateType): TableBetonType[] | null => state.tender.tableBetons;\nexport const selectorTradingProperties = (state: AppRootStateType): TradingPropertyType => state.tender.tradingProperty;\nexport const selectorTransportPrice = (state: AppRootStateType): number => state.tender.expenses.transportPrice;\nexport const selectorDiscount = (state: AppRootStateType): number => state.tender.expenses.discount;\n\nexport const selectorTotalBetonNumber = createSelector(\n    [selectorTableBetons],\n    (tableBetons) => {\n        return tableBetons?.reduce((res, b) => {\n            return b.numberOf + res;\n        }, 0);\n    },\n);\nexport const selectorOneTransportPrice = createSelector(\n    [selectorTradingProperties, selectorTotalBetonNumber],\n    (TradingProperties, TotalBetonNumber) => {\n        return TradingProperties.allTransportPrice / (TotalBetonNumber ? TotalBetonNumber : 100000000000000000);\n    },\n);\n\n\nexport const selectorCalculateTableBetons = createSelector(\n    [selectorTableBetons, selectorTransportPrice, selectorTradingProperties, selectorTotalBetonNumber, selectorDiscount, selectorOneTransportPrice],\n    (tableBetons: any[] | null, transportPrice, tradingProperty, TotalBetonNumber, discount, OneTransportPrice) => {\n        const ResultTableBetons = tableBetons?.map(b => {\n            b.name = `${b.grade} ${b.mobility}`;\n            b.transportPrize = round(transportPrice * 50/6 - tradingProperty.allTransportPrice / (TotalBetonNumber ? TotalBetonNumber : 1),2);  // затраты на транспорт\n            b.discountPrize = round(b.prize * (1 - discount / 100) + b.transportPrize,2);          // цена со скидкой\n            // и нашими затратами на\n            // транспорт\n            b.totalOnePrize = round(b.discountPrize + OneTransportPrice,2);               // // цена со скидкой и нашими\n            // затратами\n            // на транспорт + стоимость доставки за 1м (оплачиваемой поставщиком, сумма выдел на транспорт)\n            b.totalAllPrize = round(b.totalOnePrize * b.numberOf,2);   // итого за марку без НДС\n            b.totalAllPrizNDS = round(b.totalAllPrize * 1.2,2);         // итого за марку c НДС\n            b.totalNDS = round(b.totalAllPrize/5,2)  // итого НДС\n            b.NDS = round(b.discountPrize * 0.2,2);\n            b.prizeNDS = round(b.discountPrize * 1.2,2);\n            return b;\n        });\n\n        return ResultTableBetons;\n    },\n);\n\nexport type CalculateTableBetonsType =\n    {\n        name: string,                 // полное название бетона\n        transportPrize: number,        // наши затраты на транспорт на 1м\n        discountPrize: number,\n        totalOnePrize: number,\n        totalAllPrize: number,\n        totalAllPrizNDS: number,\n        totalNDS: number,\n        NDS: number,\n        prizeNDS: number,\n        article: any,\n        car: 'Миксер' | 'Самосвал'\n        id: string,\n        grade: string,\n        mobility: string,\n        prize: number,\n        numberOf: number,\n    }\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport NumberFormat from 'react-number-format';\nimport s from './TradingTermsForm.module.css';\nimport { setTradingProperty } from '../../store/tender/tender-reducer';\nimport { selectorTradingProperties } from '../../store/tender/tender-selector';\n\nexport const TradingTermsForm = () => {\n    const dispatch = useDispatch();\n    const [isActiveTenderForm, setIsActiveTenderForm] = useState<boolean>(true);\n    const TradingProperties = useSelector(selectorTradingProperties);\n    const { allTransportPrice, downTime, downTimePrice, minimumLoad } = TradingProperties;\n\n    const formik = useFormik({\n        enableReinitialize: true,\n        initialValues: {\n            allTransportPrice: allTransportPrice, //  сумма выделяемая на транспорт, руб\n            downTime: downTime, // включенное время простоя, ч\n            downTimePrice: downTimePrice, // стоимость сверх нормативного времени простоя, руб/час\n            minimumLoad: minimumLoad, // минимальная загрузка, м3\n        },\n        onSubmit: values => {\n            const TradingProperty = {\n                downTime: Number(values.downTime), downTimePrice: Number(values.downTimePrice),\n                allTransportPrice: Number(values.allTransportPrice), minimumLoad: Number(values.minimumLoad),\n            };\n            dispatch(setTradingProperty(TradingProperty));\n            formik.resetForm();\n            setIsActiveTenderForm(false);\n        },\n    });\n    const ActiveTenderForm = () => {\n        setIsActiveTenderForm(true);\n    };\n    return (\n        <form onSubmit={formik.handleSubmit} className={s.tradingTermsFormBlock}>\n            <h2>Условия Торгов</h2>\n            <div className={s.formLine}>\n                <div>Общая сумма выделяемая на транспорт, руб</div>\n                {isActiveTenderForm ?\n                    < NumberFormat customInput={TextField} variant=\"outlined\" name=\"allTransportPrice\"\n                                   onChange={formik.handleChange}\n                                   value={formik.values.allTransportPrice}\n                                   placeholder={'сумма, руб'}/> : allTransportPrice}\n            </div>\n            <div className={s.formLine}>\n                <div>включенное время простоя, ч</div>\n                {isActiveTenderForm ?\n                    <NumberFormat disabled={true} customInput={TextField} variant=\"outlined\" name=\"downTime\"\n                                  onChange={formik.handleChange}\n                                  value={formik.values.downTime}\n                                  placeholder={'время, ч'}/> : downTime}\n            </div>\n            <div className={s.formLine}>\n                <div> стоимость сверх нормативного времени простоя, руб/час</div>\n                {isActiveTenderForm ?\n                    <NumberFormat disabled={true} customInput={TextField} variant=\"outlined\" name=\"downTimePrice\"\n                                  onChange={formik.handleChange}\n                                  type=\"text\" value={formik.values.downTimePrice}\n                                  placeholder={'руб/час'}/> : downTimePrice}\n            </div>\n            <div className={s.formLine}>\n                <div>минимальная загрузка, м3</div>\n                {isActiveTenderForm ?\n                    <NumberFormat disabled={true} customInput={TextField} variant=\"outlined\" name=\"minimumLoad\"\n                                  onChange={formik.handleChange}\n                                  type=\"text\" value={formik.values.minimumLoad} placeholder={'m3'}/> : minimumLoad}\n            </div>\n            <div className={s.saveButton}>\n                {isActiveTenderForm && < Button type=\"submit\" variant=\"contained\" color=\"primary\">SAVE</Button>}\n                {!isActiveTenderForm && < Button onClick={ActiveTenderForm} variant=\"contained\"\n                                                 color=\"primary\">Change</Button>}\n            </div>\n        </form>\n\n    );\n};\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport NumberFormat from 'react-number-format';\nimport s from './ExpensesForm.module.css';\nimport { setDiscount, setTransportPrice } from '../../store/tender/tender-reducer';\nimport { selectorDiscount, selectorTransportPrice } from '../../store/tender/tender-selector';\n\nexport const ExpensesForm = () => {\n    const dispatch = useDispatch();\n    const transportPrice = useSelector(selectorTransportPrice);\n    const discount = useSelector(selectorDiscount);\n    const discountHandleChange = (e: any) => {\n        dispatch(setDiscount(Number(e.target.value)));\n    };\n    const transportPriceHandleChange = (e: any) => {\n        dispatch(setTransportPrice(Number(e.target.value)));\n    };\n\n    return (\n        <div className={s.expensesFormBlock} >\n            <h2>Затраты</h2>\n            <div className={s.formLine}>\n                <div>возмещение транспорта, м/ч</div>\n                < NumberFormat customInput={TextField} variant=\"outlined\"\n                               onChange={transportPriceHandleChange}\n                               value={transportPrice}\n                               placeholder={'сумма, руб'}/>\n            </div>\n            <div className={s.formLine}>\n                <div>скидка, % </div>\n\n                < NumberFormat customInput={TextField} variant=\"outlined\"\n                               onChange={discountHandleChange}\n                               value={discount}\n                               placeholder={'сумма, руб'}/>\n            </div>\n\n        </div>\n    );\n\n};\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useSelector } from 'react-redux';\nimport { selectorCalculateTableBetons } from '../../store/tender/tender-selector';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 1250,\n    },\n});\n\n\nexport default function ResultTable() {\n    const classes = useStyles();\n    const betons = useSelector(selectorCalculateTableBetons);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">№</TableCell>\n                        <TableCell align=\"center\">Марка бетона</TableCell>\n                        <TableCell align=\"center\">Количество, м3</TableCell>\n                        <TableCell align=\"center\">Прайс</TableCell>\n                        <TableCell align=\"center\">затраты на транспорт</TableCell>\n                        <TableCell align=\"center\">Цена со скидкой</TableCell> {/*  и включенным транспортом*/}\n                        <TableCell align=\"center\">НДС</TableCell>\n                        <TableCell align=\"center\">С НДС</TableCell>\n                        <TableCell align=\"center\">+ доставки</TableCell> {/* плюс  сумма кот выделели на транспорт*/}\n                        <TableCell align=\"center\"> итого</TableCell>\n                        <TableCell align=\"center\"> итого с НДС</TableCell>\n                        <TableCell align=\"center\"> итого НДС</TableCell>\n                    </TableRow>\n\n                </TableHead>\n\n                <TableBody>\n\n                    {betons?.map((beton, index) => (\n                        <TableRow key={beton.id}>\n                            <TableCell align=\"center\">\n                                {index + 1}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.name}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.numberOf}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.prize}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.transportPrize}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.discountPrize}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.NDS}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.prizeNDS}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.totalOnePrize}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.totalAllPrize}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.totalAllPrizNDS}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {beton.totalNDS}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { Button, MenuItem, Select, TableCell, TextField } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useDispatch } from 'react-redux';\nimport { ChangeTableBeton, setTableBeton, TableBetonType } from '../../store/tender/tender-reducer';\nimport { v1 } from 'uuid';\nimport TableRow from '@material-ui/core/TableRow';\nimport NumberFormat from 'react-number-format';\n\nconst concreteMobility = ['П1', 'П2', 'П3', 'П4'];\nconst carArr = ['Миксер', 'Самосвал'];\nexport type InputFormBetonTableType = {\n    beton?: TableBetonType\n    changeType?: 'Change' | 'Add'\n    setIsChangeBeton?: (isChangeBeton: boolean) => void\n}\n\nexport const InputFormBetonTable = ({\n                                        beton = {\n                                            car: 'Миксер', article: '', grade: '',\n                                            mobility: 'П3', prize: 0, numberOf: 0, id: '',\n                                        }, changeType = 'Add', setIsChangeBeton,\n                                    }: InputFormBetonTableType) => {\n\n    const { car, article, grade, mobility, prize, numberOf, id } = beton;\n    const dispatch = useDispatch();\n\n\n    const formik = useFormik({\n        initialValues: {\n            car: car as 'Миксер' | 'Самосвал',\n            article: article,\n            grade: grade,\n            mobility: mobility,\n            prize: prize,\n            numberOf: numberOf,\n            rememberMe: true,\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.numberOf) {\n                errors.numberOf = 'Введите количество, м3; ';\n            }\n            if (!values.grade) {\n                errors.grade = 'Введите марку бетона; ';\n            }\n            if (!values.prize) {\n                errors.prize = 'Введите цену бетона; ';\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            const beton = {\n                article: values.article,\n                car: values.car,\n                id: changeType === 'Add' ? v1() : id,\n                grade: values.grade,\n                mobility: values.mobility,\n                prize: Number(values.prize),\n                numberOf: Number(values.numberOf),\n            };\n            if (changeType === 'Add') { dispatch(setTableBeton(beton)); } else {\n                dispatch(ChangeTableBeton(beton));\n                if (setIsChangeBeton) setIsChangeBeton(false);\n            }\n            formik.resetForm();\n        },\n    });\n\n    const onSubmit = () => formik.handleSubmit();\n\n    return (\n\n        <TableRow>\n            <TableCell align=\"center\">\n                <NumberFormat customInput={TextField} variant=\"outlined\" name=\"article\"\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur} type=\"text\"\n                              value={formik.values.article} placeholder={'article'}/>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" size={'small'}>\n                    <Select\n                        name=\"car\"\n                        value={formik.values.car}\n                        onChange={formik.handleChange}\n                        label=\"d\"\n                    >\n                        {carArr.map(m => <MenuItem value={m}>{m}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </TableCell>\n            <TableCell>\n                <TextField style={{ margin: 1 }}\n                           size=\"small\" variant=\"outlined\" name=\"grade\" onChange={formik.handleChange}\n                           onBlur={formik.handleBlur} type=\"text\" error={!!formik.errors.grade}\n                           value={formik.values.grade} placeholder={'Марка бетона'}/>\n                {formik.touched.grade && formik.errors.grade ?\n                    <div style={{ color: 'red' }}> {formik.errors.grade} </div> : null}\n            </TableCell>\n            <TableCell>\n                <FormControl variant=\"outlined\" size={'small'}>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        name=\"mobility\"\n                        value={formik.values.mobility}\n                        onChange={formik.handleChange}\n                        label=\"П\"\n                    >\n                        {concreteMobility.map(m => <MenuItem value={m}>{m}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </TableCell>\n            <TableCell>\n                <NumberFormat customInput={TextField} size={1} variant=\"outlined\" name=\"numberOf\"\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur} error={!!formik.errors.numberOf}\n                              value={formik.values.numberOf} placeholder={'количество, м3'}/>\n                {formik.touched.numberOf && formik.errors.numberOf ?\n                    <div style={{ color: 'red' }}> {formik.errors.numberOf} </div> : null}\n            </TableCell>\n            <TableCell>\n                <NumberFormat customInput={TextField} size={1} variant=\"outlined\" name=\"prize\"\n                              onChange={formik.handleChange}\n                              onBlur={formik.handleBlur} error={!!formik.errors.prize}\n                              value={formik.values.prize} placeholder={'Цена'}/>\n                {formik.touched.prize && formik.errors.prize ?\n                    <div style={{ color: 'red' }}> {formik.errors.prize} </div> : null}\n            </TableCell>\n\n            <TableCell>\n                <div><Button onClick={onSubmit} variant=\"contained\"\n                             color=\"primary\">{(changeType === 'Add') ? 'ADD' : 'Change'}</Button></div>\n            </TableCell>\n        </TableRow>\n\n    );\n};\n\ntype FormikErrorType = {\n    article?: string\n    mobility?: string\n    grade?: string\n    prize?: string\n    numberOf?: string\n    rememberMe?: boolean\n}\n\n","import React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useDispatch } from 'react-redux';\nimport { Delete } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport { removeTableBeton, TableBetonType } from '../../store/tender/tender-reducer';\nimport EditIcon from '@material-ui/icons/Edit';\nimport style from './InputTableBetonRow.module.css';\nimport { InputFormBetonTable } from '../InputFormBetonTable/InputFormBetonTable';\n\nexport type InputTableBetonRowType = {\n    beton: TableBetonType\n}\n\nexport const InputTableBetonRow = ({ beton }: InputTableBetonRowType) => {\n    const [isChangeBeton, setIsChangeBeton] = useState<boolean>(false);\n    const dispatch = useDispatch();\n    const removeBeton = (id: string) => {\n        dispatch(removeTableBeton(id));\n    };\n    const ChangeBeton = (id: string) => {\n        setIsChangeBeton(true);\n    };\n\n    return (<>\n            {!isChangeBeton ? <TableRow key={beton.id}>\n                    {/*<TableCell align=\"center\" style={{ padding: 3 }}>*/}\n                    <TableCell align=\"center\">\n                        {beton.id}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        {beton.car}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        {beton.grade}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        {beton.mobility}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        {beton.numberOf}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        {beton.prize}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                        <div className={style.change}>\n                            <IconButton onClick={() => removeBeton(beton.id)}>\n                                <Delete/>\n                            </IconButton>\n                            <IconButton onClick={() => ChangeBeton(beton.id)}>\n                                <EditIcon/>\n                            </IconButton>\n                        </div>\n                    </TableCell>\n                </TableRow> :\n                <InputFormBetonTable setIsChangeBeton={setIsChangeBeton} beton={beton} changeType={'Change'}/>}\n        </>\n    );\n};\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useSelector } from 'react-redux';\nimport { selectorTableBetons } from '../../store/tender/tender-selector';\nimport { InputFormBetonTable } from '../InputFormBetonTable/InputFormBetonTable';\nimport { InputTableBetonRow } from '../InputTableBetonRow/InputTableBetonRow';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 1100,\n    },\n});\n\nexport const InputTableBeton = () => {\n    const classes = useStyles();\n    const betons = useSelector(selectorTableBetons);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Артикл</TableCell>\n                        <TableCell align=\"center\">Доставка</TableCell>\n                        <TableCell align=\"center\">Марка бетона</TableCell>\n                        <TableCell align=\"center\">Подвижность</TableCell>\n                        <TableCell align=\"center\">Количество, м3</TableCell>\n                        <TableCell align=\"center\">Цена, без НДС</TableCell>\n                        <TableCell align=\"center\"> Изменить</TableCell>\n                    </TableRow>\n\n                </TableHead>\n\n                <TableBody>\n                    {betons?.map((beton) => (\n                        <InputTableBetonRow key={beton.id} beton={beton}/>\n                    ))}\n                    <InputFormBetonTable/>\n                </TableBody>\n\n            </Table>\n\n        </TableContainer>\n\n    );\n};\n\n","import React from 'react';\nimport style from './PageOne.module.css';\nimport { TradingTermsForm } from '../../components/TradingTermsForm/TradingTermsForm';\nimport { ExpensesForm } from '../../components/ExpensesForm/ExpensesForm';\nimport { Button, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport ResultTable from '../../components/ResultTable/ResultTable';\nimport { InputTableBeton } from '../../components/InputTableBeton/InputTableBeton';\nimport s from '../../components/ExpensesForm/ExpensesForm.module.css';\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiOutlinedInput: {\n            inputMarginDense: {\n                padding: '2px',\n                paddingTop: '2px',\n                paddingBottom: '2px',\n            },\n            input: {\n                height: '25px',\n                padding: '2px',\n            },\n        },\n        MuiTextField: {\n            root: {\n                padding: '2px',\n                width: 100,\n            },\n        },\n        MuiSelect: {\n            root: {\n                display: 'flex',\n                alignItems: 'center',\n            },\n            selectMenu: {\n                height: '25px',\n            },\n        },\n        MuiIconButton: {\n            root: {\n                padding: '2px',\n            },\n        },\n        MuiTableRow: {\n            root: {\n                height: '40px',\n            },\n        },\n        MuiTableCell: {\n\n            root: {\n                height: '30px',\n                padding: 2,\n                textAlign: 'center',\n                border:\"1px solid black\",\n                borderTopColor: \"black\",\n                borderBottomColor:\"black\"\n            },\n        },\n    },\n});\n\nexport const PageOne = () => {\n\n    return (\n        <><ThemeProvider theme={theme}>\n            <div>\n                <InputTableBeton/>\n                <div className={style.tradingFormBlock}>\n                <TradingTermsForm/>\n                <ExpensesForm/>\n                </div>\n                <Button variant=\"contained\" color=\"primary\">Рассчитать</Button>\n                <ResultTable/>\n            </div>\n        </ThemeProvider>\n        </>\n    );\n};\n\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {PageTwo} from \"../pages/PageTwo/PageTwo\";\r\nimport {PageOne} from \"../pages/PageOne/PageOne\";\r\n\r\n\r\nexport const PATH = {\r\n    PAGE_ONE: \"/page_one\",\r\n    PAGE_TWO: \"/page_two\",\r\n}\r\n\r\nexport const Routes = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PAGE_ONE}/>}/>\r\n                <Route path={PATH.PAGE_ONE} render={() => <PageOne/>}/>\r\n                <Route path={PATH.PAGE_TWO} render={() => <PageTwo/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","const initialState = {\n    status: 'succeeded' as RequestStatusType,\n    error: null as string|null,\n\n}\n\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\n    switch (action.type) {\n        case 'APP/SET_STATUS':\n            return {...state, status: action.status}\n        case 'APP/SET_ERROR':\n            return {...state, error: action.error}\n\n        default:\n            return state\n    }\n}\n\nexport const setAppStatus = (status: RequestStatusType) =>\n    ({type: 'APP/SET_STATUS', status} as const)\nexport const setAppError = (error: string | null) =>\n    ({type: 'APP/SET_ERROR', error} as const)\n\n\n/*\nexport const getDoctors = () => async (dispatch: Dispatch) => {\n    try {\n        dispatch(setAppStatus('loading'))\n        const res = await getEmployees() as Array<EmployeeType>\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setEmployees(res))\n\n    } catch (e) {\n        dispatch(setAppStatus('succeeded'))\n        dispatch(setAppError(\"Error from response\"))\n    }\n}\n*/\n\n\nexport type RequestStatusType = 'succeeded' | 'loading'\n\nexport type AppInitialStateType = typeof initialState\n\ntype ActionsType =\n    ReturnType<typeof setAppStatus> |\n    ReturnType<typeof setAppError>\n\n\n\n\n\n\n\n","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppError} from \"../../store/app-reducer/app-reducer\";\r\n\r\n\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nexport const ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickHandler = () => dispatch(setAppError(null))\r\n\r\n    return (\r\n        <div className={style.notification}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/Infinity-1s-200px.2a677e42.svg\";","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport preloader from '../../assets/images/Infinity-1s-200px.svg'\r\n\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.pre} >\r\n        <img src={preloader}  style={ { height: 200 } }/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react'\nimport {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport {Menu} from \"@material-ui/icons\";\nimport { NavLink } from 'react-router-dom';\nimport { PATH } from '../../routes/Routes';\nimport style from \"./Navbar.module.css\";\n\nexport const Navbar = () => {\n\n\n    return (\n            <AppBar position=\"static\" className={style.appBarBlock}>\n                <Toolbar>\n                    <div className={style.nav}>\n                    <span>\n                <NavLink className={style.NavLink} to={PATH.PAGE_ONE}>Калькулятор</NavLink>\n            </span>\n                        <span>\n                <NavLink className={style.NavLink} to={PATH.PAGE_TWO}>CONVERTER</NavLink>\n            </span>\n                    </div>\n                </Toolbar>\n            </AppBar>\n    )\n}\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectorError, selectorStatus} from \"../store/app-reducer/app-selector\";\r\nimport {Routes} from \"../routes/Routes\";\r\nimport {ErrorSnackBar} from \"../components/ErrorSnackBar/ErrorSnackBar\";\r\nimport Preloader from \"../components/Preloder/Preloader\";\r\nimport {Navbar} from \"../components/Navbar/Navbar\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector(selectorStatus)\r\n    const error = useSelector(selectorError)\r\n\r\n\r\n    return (<Router>\r\n            <div className=\"App\">\r\n                <Navbar/>\r\n                {error !== null && <ErrorSnackBar errorMessage={error}/>}\r\n                {status === 'loading' && <Preloader/>}\r\n                <Routes/>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer/app-reducer\";\r\nimport {tenderReducer} from \"./tender/tender-reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app:appReducer,\r\n    tender:tenderReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./app/App\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"TradingTermsForm_formLine__1u-wO\",\"tradingTermsFormBlock\":\"TradingTermsForm_tradingTermsFormBlock__1uCDm\",\"saveButton\":\"TradingTermsForm_saveButton__NS8uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__3q0sr\",\"text\":\"ErrorSnackBar_text__1XKYY\",\"close\":\"ErrorSnackBar_close__kWfQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__21WcC\",\"NavLink\":\"Navbar_NavLink__IYNYA\",\"appBarBlock\":\"Navbar_appBarBlock__2ZyS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"ExpensesForm_formLine__34u6V\",\"expensesFormBlock\":\"ExpensesForm_expensesFormBlock__2GkpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xxx\":\"PageTwo_xxx__269Fi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tradingFormBlock\":\"PageOne_tradingFormBlock__1U5h4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"change\":\"InputTableBetonRow_change__27O1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"Preloader_pre__2pHbL\"};"],"sourceRoot":""}